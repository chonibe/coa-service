{% layout 'theme' %}

{% if customer %}
  <meta name="customer_id" content="{{ customer.id }}">
  <script>
    // Set initial customer data - only ID
    window.SHOPIFY_CUSTOMER = {
      id: {{ customer.id | json }}
    };

    // Authenticate with our application
    async function authenticateWithApp() {
      try {
        const response = await fetch('https://dashboard.thestreetlamp.com/api/auth/shopify', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            customerId: {{ customer.id | json }}
          })
        });

        if (!response.ok) {
          throw new Error('Authentication failed');
        }

        const data = await response.json();
        
        if (data.success) {
          // Redirect to dashboard with customer ID in path
          window.location.href = `https://dashboard.thestreetlamp.com/dashboard/${{{ customer.id | json }}}`;
        } else {
          throw new Error(data.error || 'Authentication failed');
        }
      } catch (error) {
        console.error('Authentication error:', error);
        document.getElementById('error-message').textContent = 'Failed to authenticate. Please try again.';
        document.getElementById('loading-state').style.display = 'none';
        document.getElementById('error-state').style.display = 'flex';
      }
    }

    // Start authentication process
    authenticateWithApp();
  </script>
{% endif %}

<div class="page-width">
  <div class="grid">
    <div class="grid__item">
      <h1 class="order-lookup-title">{{ page.title }}</h1>
      
      <div id="coa-dashboard-app" 
           class="order-lookup-container"
           {% if customer %}
           data-customer-id="{{ customer.id }}"
           data-customer-email="{{ customer.email }}"
           data-customer-name="{{ customer.name }}"
           {% endif %}>
        <!-- Loading State -->
        <div id="loading-state" class="loading-state">
          <div class="loading-spinner"></div>
          <p>Loading your orders...</p>
        </div>

        <!-- Error State -->
        <div id="error-state" class="error-state" style="display: none;">
          <div class="error-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line></svg>
          </div>
          <p id="error-message"></p>
          <div class="error-actions">
            <a href="/account/login" class="btn">Log In to Your Account</a>
            <button onclick="window.location.reload()" class="btn btn-secondary">Try Again</button>
          </div>
        </div>

        <!-- Orders List -->
        <div id="orders-list" class="orders-list" style="display: none;">
          <!-- Orders will be populated here -->
        </div>

        <!-- Empty State -->
        <div id="empty-state" class="empty-state" style="display: none;">
          <div class="empty-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path></svg>
          </div>
          <p>You haven't placed any orders yet</p>
          <a href="/collections/all" class="btn">Start Shopping</a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
(() => {
  const app = {
    init() {
      this.container = document.getElementById('coa-dashboard-app')
      
      // Get customer ID from multiple sources
      this.shopifyCustomerId = this.getCustomerId()
      console.log('Using Customer ID:', this.shopifyCustomerId)

      if (!this.shopifyCustomerId) {
        console.error('No customer ID found')
        this.showError('Please log in to view your orders')
        return
      }

      // Add customer ID to URL if not present
      this.updateUrlWithCustomerId()
      
      // Redirect to dashboard with customer ID in path
      window.location.href = `https://dashboard.thestreetlamp.com/dashboard/${this.shopifyCustomerId}`
    },

    getCustomerId() {
      // Try to get customer ID from multiple sources
      const sources = {
        window: window.SHOPIFY_CUSTOMER?.id,
        url: new URLSearchParams(window.location.search).get('account'),
        meta: document.querySelector('meta[name="customer_id"]')?.content,
        data: this.container?.dataset.customerId
      }

      console.log('Customer ID Sources:', sources)

      // Return the first available source
      return sources.window || sources.url || sources.meta || sources.data
    },

    updateUrlWithCustomerId() {
      const urlParams = new URLSearchParams(window.location.search)
      if (!urlParams.has('account')) {
        const newUrl = `${window.location.pathname}?account=${this.shopifyCustomerId}`
        window.history.replaceState({}, '', newUrl)
        console.log('Updated URL with customer ID:', newUrl)
      }
    },

    showError(message) {
      document.getElementById('error-message').textContent = message
      document.getElementById('loading-state').style.display = 'none'
      document.getElementById('error-state').style.display = 'flex'
    }
  }

  // Initialize the app when the DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => app.init())
  } else {
    app.init()
  }
})()
</script>

<style>
:root {
  --primary-color: #008060;
  --text-primary: #212b36;
  --text-secondary: #637381;
  --border-color: #dfe3e8;
  --bg-light: #f4f6f8;
  --success-color: #50b83c;
  --warning-color: #ffea8a;
  --error-color: #de3618;
}

.page-width {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.order-lookup-title {
  font-size: 2rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 2rem;
  text-align: center;
}

/* Loading State */
.loading-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  background: var(--bg-light);
  border-radius: 8px;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--border-color);
  border-top-color: var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Error State */
.error-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  background: #fff;
  border: 1px solid var(--error-color);
  border-radius: 8px;
  text-align: center;
}

.error-icon {
  color: var(--error-color);
  margin-bottom: 1rem;
}

/* Empty State */
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  background: var(--bg-light);
  border-radius: 8px;
  text-align: center;
}

.empty-icon {
  color: var(--text-secondary);
  margin-bottom: 1rem;
}

/* Orders List */
.orders-list {
  display: grid;
  gap: 2rem;
}

.order-card {
  background: #fff;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  overflow: hidden;
}

.order-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  background: var(--bg-light);
  border-bottom: 1px solid var(--border-color);
}

.order-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
}

.order-date {
  color: var(--text-secondary);
  margin: 0.5rem 0 0;
}

.status-badge {
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.875rem;
  font-weight: 500;
}

.status-badge.paid {
  background: var(--success-color);
  color: #fff;
}

.status-badge.pending {
  background: var(--warning-color);
  color: var(--text-primary);
}

/* Line Items */
.line-items {
  padding: 1.5rem;
}

.line-item {
  display: flex;
  gap: 1.5rem;
  padding: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  margin-bottom: 1rem;
}

.line-item:last-child {
  margin-bottom: 0;
}

.line-item-image {
  width: 100px;
  height: 100px;
  flex-shrink: 0;
}

.line-item-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 4px;
}

.placeholder-image {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--bg-light);
  border-radius: 4px;
  color: var(--text-secondary);
}

.line-item-details {
  flex: 1;
}

.line-item-details h3 {
  font-size: 1.125rem;
  font-weight: 500;
  color: var(--text-primary);
  margin: 0 0 0.5rem;
}

.vendor {
  color: var(--text-secondary);
  margin: 0 0 0.5rem;
}

.quantity, .price {
  margin: 0.25rem 0;
  color: var(--text-secondary);
}

.nfc-status {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.875rem;
  margin-top: 0.5rem;
}

.nfc-status.claimed {
  background: var(--success-color);
  color: #fff;
}

.nfc-status.unclaimed {
  background: var(--warning-color);
  color: var(--text-primary);
}

/* Buttons */
.btn {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  background: var(--primary-color);
  color: #fff;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  font-weight: 500;
  text-decoration: none;
  cursor: pointer;
  transition: background-color 0.2s;
}

.btn:hover {
  background: #006e52;
}

/* Responsive Design */
@media (max-width: 768px) {
  .order-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .line-item {
    flex-direction: column;
  }

  .line-item-image {
    width: 100%;
    height: 200px;
  }
}

/* Login Required Styles */
.login-required {
  text-align: center;
  padding: 3rem;
  background: var(--bg-light);
  border-radius: 8px;
  margin: 2rem 0;
}

.login-icon {
  color: var(--primary-color);
  margin-bottom: 1.5rem;
}

.login-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 1rem;
}

.login-message {
  color: var(--text-secondary);
  margin-bottom: 1.5rem;
}

.login-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.btn-secondary {
  background: var(--bg-light);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
}

.btn-secondary:hover {
  background: var(--border-color);
}

.error-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-top: 1rem;
}
</style> 